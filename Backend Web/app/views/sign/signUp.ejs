<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>ECCNNO</title>

    <link rel="icon" type="image/png" href="images/logo-1.png" />

    <!-- Bootstrap CSS CDN -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
    
    <!-- Our Custom CSS -->
    <link rel="stylesheet" type="text/css" href="css/index.css">
    <link rel="stylesheet" type="text/css" href="css/login.css">
    <link rel="stylesheet" type="text/css" href="css/customForm.css">

    <!-- Font Awesome JS -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css"
        integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">

    <!-- SELECT2 -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />

    <!-- <script src="https://unpkg.com/axios/dist/axios.min.js"></script> -->
    <script src="js/axios/axios.min.js"></script>

</head>

<body>

    <div id="content">
        <!-- NAVBAR -->
        <nav id="border1" class="navbar navbar-expand-lg navbar-light bg-white fixed-top">
            <div class="container-fluid">

                <a href="/" class="navbar-brand"><img src="/images/logo-1.png" style="height: 50%; width: 50%;"></a>

                <ul id="border2" class="nav navbar-nav ml-auto">
                </ul>
            </div>
        </nav>

        <!-- CONTENT -->
        <div class="container">

            <br><br>

            <div class="divCenter">
                <h3>Cadastrando Novo Usuário &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>
                <br>
                <form action="javascript:signUp()" method="POST">

                    <div class="form-group">
                        <label><i class="fas fa-user"></i> Nome Completo</label>
                        <input type="text" pattern="[A-Za-zÀ-ú ']{1,127}$" name="userName" id="userName" class="form-control" minlength="1" maxlength="127" required>
                    </div>

                    <div class="form-group">
                        <label><i class="fas fa-at"></i> Email</label>
                        <input type="email" name="userEmail" id="userEmail" class="form-control" minlength="1" maxlength="127" required>
                    </div>

                    <div class="form-group">
                        <label><i class="fas fa-phone"></i> Telefone</label>
                        <input type="tel" placeholder="(99)9999-9999" name="userPhone" id="userPhone" class="form-control"
                            pattern="\({0,1}[0-9]{2}\){0,1} {0,1}[0-9]{4,5}-{0,1}[0-9]{4}$" minlength="11" maxlength="15" required>
                    </div>

                    <div class="form-group">
                        <label><i class="fas fa-key"></i> Senha</label>
                        <input type="password" name="password" id="password" class="form-control" minlength="8" maxlength="32" required>
                    </div>

                    <div class="form-group">
                        <label><i class="fas fa-key"></i> Confirmar Senha</label>
                        <input type="password" name="confirmPassword" id="confirmPassword" class="form-control" minlength="8" maxlength="32" required>
                    </div>

                    <button class="btn btn-primary btnLeft" type="submit">Salvar</button>
                </form>
            </div>

            <br>
            <br>
        </div>
        <!-- /CONTENT -->

<%include ../common/footer.ejs%>

<script>
/*============================================================================*/
    /**
     * =======================================================
     * |Função responsável executar todas as rotinas iniciais|
     * |da página assim que ela é carregada.                 |
     * =======================================================
     */
    window.onload = () => {
    };
    $(document).ready(function () {

        /*Chamada da função que ativa a side bar.*/
        $('#sidebarCollapse').on('click', function () {
            $('#sidebar').toggleClass('active');
        });
    });
/*============================================================================*/

/*============================================================================*/
    /**
     * ========================================================
     * |Função responsável por tratar os dados do formulário e|
     * |realizar o envio dos dados para o servidor cadastrar  |
     * |um novo usuário.                                      |
     * ========================================================
     */
    function signUp() {
        const password        = document.getElementById("password").value;        /*Variável que contém a senha do usuário.*/
        const confirmPassword = document.getElementById("confirmPassword").value; /*Variável que contém a confirmação de senha do usuário.*/

        let user = {
            userName    : document.getElementById("userName") .value, /*Atributo que contém o nome completo do usuário.*/
            userEmail   : document.getElementById("userEmail").value, /*Atributo que contém o email do usuário.*/
            userPhone   : document.getElementById("userPhone").value, /*Atributo que contém o celular do usuário.*/
            userPassword: "",                                         /*Atributo que conterá a senha do usuário.*/
        }

        /*Verificação do nome completo do usuário.*/
        if(user.userName == null || user.userName == undefined || user.userName == "" || user.userName.toString().length > 127 || user.userName.toString().length < 1) {
            alert("Nome do usuário inválido!");
            return;
        }

        /*Verificação do email do usuário.*/
        if(user.userEmail == null || user.userEmail == undefined || user.userEmail == "" || user.userEmail.toString().length > 127 || user.userEmail.toString().length < 1) {
            alert("Email do usuário inválido!");
            return;
        }

        /*Verificação do celular do usuário.*/
        if(user.userPhone == null || user.userPhone == undefined || user.userPhone == "" || user.userPhone.toString().length > 15 || user.userEmail.toString().length < 11) {
            alert("Celular do usuário inválido!");
            return;
        }

        /*Verificação da senha do usuário.*/
        if(password == null || password == undefined || password == "" || password.toString().length > 32 || password.toString().length < 8) {
            alert("Senha do usuário inválido!");
            return;
        }

        /*Verificação da confirmção da senha do usuário.*/
        if(confirmPassword == null || confirmPassword == undefined || confirmPassword == "" || confirmPassword.toString().length > 32 || confirmPassword.toString().length < 8) {
            alert("Confirmação da senha do usuário inválido!");
            return;
        }

        /*Verificação se as senhas do usuário conferem.*/
        if(password != confirmPassword) {
            alert("Senha e Confirmação de senha estão diferentes!");
            return;
        } else {
            user.userPassword = password;
        }

        /*Chamada da função que torna o objeto user imutável.*/
		Object.freeze(user);

        /**
         * Chamada axios para a rota insertUser para inserir um novo usuário no sistema.
         */
        axios.post("/signUp", user)
            .then((response) => {
                /*Chamada da função que torna o objeto user imutável.*/
		        Object.freeze(response);
                /* Tratamento do retorno.*/
                if (response.data.status == "success") {
                    /*Alerta o usuário com a mensagem do servidor.*/
                    alert(response.data.msg);
                    window.location.href = "/signIn"
                }
                else{
                    /*Atribuição da mensagem de retorno do servidor.*/
                    let msg = response.data.msg;
                    /*Verificação se foi enviada mais de uma mensagem.*/
                    if(Array.isArray(response.data.msg)) {
                        /*Atribuição de string vazia a variável.*/
                        msg = "";
                        /*Loop responsável por concatenar todas as mensagens enviadas.*/
                        for (const i in response.data.msg) {
                            msg += response.data.msg[i].msg;
                            msg += "\n";
                        }
                    } 
                    /*Alertar o usuario, caso tenha ocorrido algum erro no servidor*/
                    alert(msg);
                }
            })
            .catch((error) => {
                /*Tratamento de erro.*/
                alert("ERROR");
                console.log(error);
            });
    }
/*============================================================================*/
</script>

</html>