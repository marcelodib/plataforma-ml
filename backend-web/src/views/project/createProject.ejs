<%include ../common/header.ejs%>

<link rel="stylesheet" type="text/css" href="css/customForm.css">

<!-- CONTENT -->
<div class="container">

    <br><br>

    <div class="divCenter">
        <h3>Criando Novo Projeto &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>
        <br>
        <form action="javascript:createProject()" method="POST">

            <!-- input  -->
            <div class="form-group">
                <label><i class="fas fa-brain"></i> Nome do Projeto</label>
                <input type="text" name="projectName" id="projectName" class="form-control" required>
            </div>

            <!-- input  -->
            <div class="form-group">
                <label><i class="fas fa-tag"></i> Nome do objeto (*Deve ser igual ao label do Dataset)</label>
                <input type="text" name="className" id="className" class="form-control" required>
            </div>

            <button class="btn btn-primary btnLeft" type="submit">Salvar</button>
        </form>
    </div>

    <br><br>

</div>
<!-- /CONTENT -->

<%include ../common/footer.ejs%>

<script>
/*============================================================================*/
    /**
     * =======================================================
     * |Função responsável executar todas as rotinas iniciais|
     * |da página assim que ela é carregada.                 |
     * =======================================================
     */
    window.onload = () => {
        /*Chamada da função que adiciona o titulo da side bar.*/
        setSideBarTitle("Novo Projeto", "fa-plus")
    };
    $(document).ready(function () {

        /*Chamada da função que ativa a side bar.*/
        $('#sidebarCollapse').on('click', function () {
            $('#sidebar').toggleClass('active');
        });
    });
/*============================================================================*/

/*============================================================================*/
    /**
     * ========================================================
     * |Função responsável por tratar os dados do formulário e|
     * |realizar o envio dos dados para o servidor cadastrar  |
     * |um novo projeto.                                      |
     * ========================================================
     */
    function createProject() {

        const project = {
            projectName: document.getElementById("projectName").value, /*Atributo que contém o nome do projeto.*/
            className  : document.getElementById("className").value,   /*Atributo que contém o nome do objeto a ser detectado.*/
        };

        /*Chamada da função que torna o objeto user imutável.*/
        Object.freeze(project);

        /*Verificação do nome do projeto.*/
        if(project.projectName == undefined || project.projectName == null || project.projectName == "" || project.projectName.length > 127) {
            return alert("Nome do Projeto inválido!");
        }

        /*Verificação da classe(label) do projeto.*/
        if(project.className == undefined || project.className == null || project.className == "" || project.className.length > 63) {
            return alert("Nome do Objeto inválido!");
        }
        
        /**
         * Chamada axios para a rota createProject para cadastrar um novo projeto no sistema.
         */
        axios.post("/createProject", project)
            .then((response) => {
                /* Tratamento do retorno.*/
                if (response.status === 200 && response.data.status === "success") {
                    /*Alerta o usuário com a mensagem do servidor.*/
                    alert(response.data.msg);
                    /*Redireciona para página de listagem de projetos*/
                    window.location.href = "/listProject";
                }
            })
            .catch((error) => {
                /*Atribuição da mensagem de retorno do servidor.*/
                let msg = error.response.data.msg;
                /*Verificação se foi enviada mais de uma mensagem.*/
                if(Array.isArray(msg)) {
                    /*Atribuição de string vazia a variável.*/
                    msg = "";
                    /*Loop responsável por concatenar todas as mensagens enviadas.*/
                    for (const i in error.response.data.msg) {
                        msg += error.response.data.msg[i].msg + "\n";
                    }
                } 
                /*Alertar o usuario, caso tenha ocorrido algum erro no servidor*/
                return alert(msg);
            });
    }
/*============================================================================*/
</script>

</html>